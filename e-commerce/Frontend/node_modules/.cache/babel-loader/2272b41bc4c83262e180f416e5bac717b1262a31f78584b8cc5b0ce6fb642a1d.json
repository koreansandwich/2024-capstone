{"ast":null,"code":"var _jsxFileName = \"C:\\\\koreansandwich\\\\2024-capstone\\\\e-commerce\\\\Frontend\\\\src\\\\components\\\\ChatbotInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ChatbotInterface.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotInterface = () => {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  // 채팅 기록 불러오기\n  const handleViewHistory = () => {\n    const token = localStorage.getItem(\"token\");\n    axios.get(\"http://localhost:8080/api/chat/history?days=7\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      } // 템플릿 리터럴 수정`\n    }).then(response => {\n      setChatHistory(response.data); // 서버에서 받은 대화 기록을 설정\n    }).catch(error => {\n      console.error(\"Failed to get chat history:\", error);\n    });\n  };\n\n  // 메시지 전송\n  const handleSendMessage = () => {\n    const token = localStorage.getItem(\"token\");\n    const newMessage = {\n      text: message,\n      sender: \"user\"\n    };\n    setChatHistory([...chatHistory, newMessage]); // 새로운 메시지를 대화 기록에 추가\n\n    axios.post(\"http://localhost:8080/api/chat/send\", newMessage, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      } // 템플릿 리터럴 수정\n    }).then(response => {\n      console.log;\n      setChatHistory(prevHistory => [...prevHistory, {\n        text: response.data,\n        sender: \"bot\"\n      } // 봇의 응답을 대화 기록에 추가\n      ]);\n      setMessage(\"\"); // 입력 필드 초기화\n    }).catch(error => {\n      console.error(\"Failed to send message:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Design Thinking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: chatHistory.length > 0 ? chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.sender}` // 템플릿 리터럴 수정\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your chat will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type message...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleViewHistory,\n      className: \"view-history-button\",\n      children: \"View Chat History (Last 7 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotInterface, \"EiSggExibc/2omlKUW2k7LMfDyE=\");\n_c = ChatbotInterface;\nexport default ChatbotInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatbotInterface\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatbotInterface","_s","chatHistory","setChatHistory","message","setMessage","handleViewHistory","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","handleSendMessage","newMessage","text","sender","post","log","prevHistory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/koreansandwich/2024-capstone/e-commerce/Frontend/src/components/ChatbotInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChatbotInterface.css\";\r\n\r\nconst ChatbotInterface = () => {\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // 채팅 기록 불러오기\r\n    const handleViewHistory = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        axios\r\n            .get(\"http://localhost:8080/api/chat/history?days=7\", {\r\n                headers: {Authorization: `Bearer ${token}`} // 템플릿 리터럴 수정`\r\n            })\r\n            .then((response) => {\r\n                setChatHistory(response.data); // 서버에서 받은 대화 기록을 설정\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Failed to get chat history:\", error);\r\n            });\r\n    };\r\n\r\n    // 메시지 전송\r\n    const handleSendMessage = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        const newMessage = { text: message, sender: \"user\" };\r\n\r\n        setChatHistory([...chatHistory, newMessage]); // 새로운 메시지를 대화 기록에 추가\r\n\r\n        axios\r\n            .post(\"http://localhost:8080/api/chat/send\", newMessage, {\r\n                headers: { Authorization: `Bearer ${token}` }, // 템플릿 리터럴 수정\r\n            })\r\n            .then((response) => {\r\n                console.log\r\n                setChatHistory((prevHistory) => [\r\n                    ...prevHistory,\r\n                    { text: response.data, sender: \"bot\" }, // 봇의 응답을 대화 기록에 추가\r\n                ]);\r\n                setMessage(\"\"); // 입력 필드 초기화\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Failed to send message:\", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-interface\">\r\n            <header className=\"chatbot-header\">\r\n                <h1>Design Thinking</h1>\r\n            </header>\r\n            <div className=\"chat-area\">\r\n                {chatHistory.length > 0 ? (\r\n                    chatHistory.map((message, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`chat-message ${message.sender}`} // 템플릿 리터럴 수정\r\n                        >\r\n                            <p>{message.message}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Your chat will appear here...</p>\r\n                )}\r\n            </div>\r\n            <div className=\"input-area\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Type message...\"\r\n                    className=\"chat-input\"\r\n                />\r\n                <button onClick={handleSendMessage} className=\"send-button\">\r\n                    Send\r\n                </button>\r\n            </div>\r\n            <button\r\n                onClick={handleViewHistory}\r\n                className=\"view-history-button\"\r\n            >\r\n                View Chat History (Last 7 Days)\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatbotInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}