{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\2024-capstone\\\\e-commerce\\\\Frontend\\\\src\\\\components\\\\SuccessPage.js\",\n  _s = $RefreshSig$();\n// SuccessPage.js (또는 다른 API 요청을 필요로 하는 파일에서)\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuccessPage = () => {\n  _s();\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // 로그인 성공 시 저장된 JWT 토큰\n\n    if (token) {\n      // 보호된 리소스에 요청을 보낼 때 Bearer 토큰을 포함\n      axios.get('http://localhost:8080/protected-resource', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        console.log('Protected resource data:', response.data);\n      }).catch(error => {\n        console.error('Error accessing protected resource:', error);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"success-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uADF8\\uC778\\uC774 \\uC131\\uACF5\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(SuccessPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","SuccessPage","_s","token","localStorage","getItem","get","headers","Authorization","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/study/2024-capstone/e-commerce/Frontend/src/components/SuccessPage.js"],"sourcesContent":["// SuccessPage.js (또는 다른 API 요청을 필요로 하는 파일에서)\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SuccessPage = () => {\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token'); // 로그인 성공 시 저장된 JWT 토큰\r\n\r\n        if (token) {\r\n            // 보호된 리소스에 요청을 보낼 때 Bearer 토큰을 포함\r\n            axios.get('http://localhost:8080/protected-resource', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log('Protected resource data:', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error accessing protected resource:', error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"success-page-container\">\r\n            <h1>로그인이 성공했습니다</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtBL,SAAS,CAAC,MAAM;IACZ,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE7C,IAAIF,KAAK,EAAE;MACP;MACAL,KAAK,CAACQ,GAAG,CAAC,0CAA0C,EAAE;QAClDC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUL,KAAK;QAClC;MACJ,CAAC,CAAC,CACGM,IAAI,CAACC,QAAQ,IAAI;QACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC1D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZJ,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA;IAAKgB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEd,CAAC;AAACnB,EAAA,CA1BID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}